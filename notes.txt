=>React doesnâ€™t work directly with the browserâ€™s real DOM all the time. Instead, it creates its own version of it first called the Virtual DOM,

=>It's a copy of the real DOM, kept in memory by React.

=>When things change (like a button is clicked), React updates the virtual DOM first.

=>Then it compares the virtual DOM to the real DOM.

=> In the customReact file we craeted, In your code, you made a small custom version of Reactâ€™s rendering logic:
You built your own mini virtual DOM as a JS object:
And you wrote a function to turn it into real DOM on the page. Thatâ€™s literally what React does internally â€” just at a much bigger scale.

=> Real DOM (also called Browser DOM)
This is the actual webpage shown in the browser.

=> Virtual DOM
A copy of the real DOM, created by React (or other frameworks).
It's just a JavaScript object â€” faster and easier to update.

=> Reconciliation is the process React uses to figure out what changed in the UI and update the page efficiently.Itâ€™s a diffing algorithm â€” which means:

It compares the new Virtual DOM with the old one to find the minimum number of changes needed to update the real DOM.

=> When we call the setState(), React sees that the state has changed.It re-runs the component function (e.g., your App()), and creates a new Virtual DOM from the updated JSX.

Then comes the Reconciliation Algorithm ðŸ§ :
React compares the new Virtual DOM with the previous one.
It finds the differences.React updates the Real DOM only at the changed places, not the whole thing.

=> React Fiber is the internal engine of React â€”
It controls how rendering works under the hood â€” especially things like:

Reconciliation
Rendering priority
Interrupting work
Smooth updates

=> Props let you customize each instance of the component.